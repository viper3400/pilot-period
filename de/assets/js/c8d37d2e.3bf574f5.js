"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[787],{9588:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"tester-vs-bot","metadata":{"permalink":"/de/tester-vs-bot","source":"@site/blog/2023-12-31-tester-vs-bot.mdx","title":"Feel the Heartbeat of Software Testing","description":"If your approach to software testing consists of merely navigating through predefined test cases with specified inputs and expected outcomes, and your only action is to tick checkboxes without engaging in thorough testing, then you are not functioning as a tester; rather, you are akin to a bot.","date":"2023-12-31T00:00:00.000Z","formattedDate":"31. Dezember 2023","tags":[{"label":"testing","permalink":"/de/tags/testing"},{"label":"automation","permalink":"/de/tags/automation"}],"readingTime":2.545,"hasTruncateMarker":false,"authors":[{"name":"Jan Graefe","title":"Autor","url":"https://jangraefe.de","imageURL":"img/jan.jpg","key":"jang"}],"frontMatter":{"slug":"tester-vs-bot","title":"Feel the Heartbeat of Software Testing","authors":["jang"],"tags":["testing","automation"]},"unlisted":false,"nextItem":{"title":"Wie man Software Tester wird","permalink":"/de/how"}},"content":"> ***If your approach to software testing consists of merely navigating through predefined test cases with specified inputs and expected outcomes, and your only action is to tick checkboxes without engaging in thorough testing, then you are not functioning as a tester; rather, you are akin to a bot.***\\n\\nIn the world of software testing, there\'s a big difference between doing the bare minimum and truly understanding what you\'re testing. Imagine this: instead of really digging into the software, a tester just goes through a set list of tests, checking boxes as they go. It might look like progress, but it\'s like scratching the surface without getting to the real stuff.\\n\\n![human finger touches robot finger](/img/tester-vs-bot.jpg)\\n_Image by [geralt](https://pixabay.com/users/geralt-9301/)_\\n\\n**The Ritual**\\n\\nPicture this as a ritual: a tester follows a set path, just ticking off boxes with specific inputs and expected results. It\'s like a dance, but instead of exploring the software\'s ins and outs, it\'s more like going through the motions.\\n\\n**The Misleading Idea**\\n\\nLet\'s clear something up: just ticking boxes doesn\'t equal effective testing. It might seem like things are getting done, but it doesn\'t go deep enough to find the hidden problems in the code.\\n\\n**Going Beyond**\\n\\nSoftware testing is an art. It\'s not just about following a script; it\'s about actively thinking and engaging with the software. Real testers don\'t stick to the script \u2013 they go off the beaten path, checking every corner for potential issues.\\n\\n**More Than Just Checking Boxes**\\n\\nGood testers don\'t rely only on checkboxes in a test execution plan. They bring in critical thinking, creativity, and a deep understanding of how the software works. Thorough testing means crafting tests that go beyond the obvious, thinking ahead, and making sure every part of the software gets a good look.\\n\\n**The Danger of Robotic Testing**\\n\\nWhen testing becomes mindless checkbox ticking, it\'s like being stuck in robot mode. The line between a real tester and an automated bot starts to blur. The human touch \u2013 the ability to adapt, think creatively, and find tricky issues \u2013 disappears.\\n\\n**Conclusion: Embracing  The Quality Journey**\\n\\nIn software testing, it\'s not just about getting through a checklist. It\'s a journey, a quest to really understand what makes the software tick. Let\'s move past the routine and embrace the heart of testing \u2013 an ever-evolving process that separates the real testers from the software bots.\\n\\n:::danger The Role of Regression Tests\\n\\nWhile advocating for a holistic approach and  the importance of moving beyond checkbox testing to truly understand and engage with software, it is crucial to acknowledge the value of reliable regression tests.\\n\\n**It is the combination of thoughtful, exploratory testing and robust regression testing that forms the backbone of a comprehensive quality assurance strategy.**   \\n\\nStriking this balance ensures not only the uncovering of new issues but also the preservation of the stability and reliability of the software over time. \\n\\nBe aware to recognize the moment to introduce automation into your testing strategy as a key consideration for maintaining an effective and efficient software testing process.\\n\\n:::"},{"id":"how","metadata":{"permalink":"/de/how","source":"@site/i18n/de/docusaurus-plugin-content-blog/2022-12-01-how-i-became-a-tester.md","title":"Wie man Software Tester wird","description":"Dar\xfcber, wie man Software Tester wird","date":"2022-12-01T00:00:00.000Z","formattedDate":"1. Dezember 2022","tags":[{"label":"SoftwareTesting","permalink":"/de/tags/software-testing"},{"label":"QualityAssurance","permalink":"/de/tags/quality-assurance"}],"readingTime":2.585,"hasTruncateMarker":false,"authors":[{"name":"Jan Graefe","title":"Autor","url":"https://jangraefe.de","imageURL":"img/jan.jpg","key":"jang"}],"frontMatter":{"slug":"how","title":"Wie man Software Tester wird","authors":["jang"],"tags":["SoftwareTesting","QualityAssurance"]},"unlisted":false,"prevItem":{"title":"Feel the Heartbeat of Software Testing","permalink":"/de/tester-vs-bot"}},"content":"## Dar\xfcber, wie man Software Tester wird\\n\\nNun, diese Frage kannst du eigentlich gleich googeln und du wirst viele richtige Antworten finden. \\n\\nAlso ist dies die Geschichte, wie **ich** Software Tester wurde.\\n\\nNachdem ich meine Fachhochschulausbildung vor 15+ Jahren erfolgreich beendet hatte, wurde ich von eine kleinen Software-Entwicklungsfirma angestellt. Sie war spezialisiert auf Software f\xfcr einen kleinen Markt im Rundfunkbereich. Die Software war sehr modular, hoch konfigurierbar and reich an Schnittstellen - entweder zu unseren eigenen Modulen oder zu Drittherstellern.\\n\\nMein Job war es, bei unsren Kunden vor Ort im Rahmen von Einf\xfchrungsprojekten, die Software zu installieren, zu konfigurieren und in Betrieb zu nehmen. Weiterhin stellte ich vom B\xfcro aus den Remote-Support sicher. Traten im Betrieb Fehler auf, war ich die erste Anlaufstelle f\xfcr den Kunden. \\n\\nZu dieser Zeit gab es in meinem Team weder einen Tester oder einen Testprozess. Es gab auch keinen klar definierten Releaseprozess. Die Entwickler testeten selber, sendeten Debug-Versionen (all in one *.exe Dateien) per E-Mail zum Kunden. Der Kunde probierte es dann aus und nahm die Version in Betrieb.\\n\\nDies war mein erster Kontakt mit einem Mantra, welches mich bis heute begleitet:\\n\\n> **\\"Der Kunde testet selbst! Er weiss ja am Besten, wie es funktionieren muss!\\"**\\n\\nWenn ich wieder im Support B\xfcro vor unserem Webportal sass, bekam ich dann aber irgendwie einen anderen Eindruck. Wenn der Kunde doch wusste, wie es funktionieren muss, warum nahm er dann immer wieder Versionen in Betrieb, die nach mehr oder eher weniger langer Betriebszeit Fehler verursachten?\\n\\nUnd warum waren die Kunden dann trotzdem so sauer und beschwerten sich \xfcber die Qualit\xe4t? Sie hatten diese doch selber gepr\xfcft. Mit ihren eigenen Gesch\xe4ftsprozessen. Und f\xfcr gut empfunden? Sonst h\xe4tten sie Version doch nicht in Betrieb genommen, oder?\\n\\nOkay, f\xfcr den Unterschied zwischen \\"testen\\" und \\"probieren\\" ben\xf6tigt es dann wohl mal einen eigenen Post... \\n\\nIch war es in jedem Fall leid, bei den Kunden st\xe4ndig Besserung zu geloben. Schlussendlich, waren es sicher auch unsere Kunden leid, mir das jedes Mal wieder aufs Neue zu glauben.\\n\\nNun hatte auch dieses kleine Software-Entwicklungs-Team schon einmal etwas vom Konzept des unabh\xe4ngigen Testens geh\xf6rt. Also Software vor der Auslieferung an den Kunden von einer zweiten Instanz (neben dem Entwickler selbst) testen zu lassen.\\n\\nIch fand das Thema sofort spannend. W\xfcrde es mir doch erm\xf6glichen, mich noch intensiver mit der Funktionsweise der Software auseinanderzusetzen. Auch w\xe4re ich dann im Support bei der Beantwortung der Fragen kompetenter. Wir w\xfcrden Fehler fr\xfcher finden. Wir w\xfcrden lernen, die Gesch\xe4ftsprozesse des Kunden besser zu verstehen. Alles in allem, auch eine bessere Qualit\xe4t liefern.\\n\\nSo begann also meine Karriere als Software Tester. Eine spannende Aufgabe mit viel Aufbauarbeit und einer steilen Lernkurve. \\n\\nPS:\\n\\nDas Testen in einem Team mit 5  - 6 Entwicklern is kein Teilzeitjob. Und ich hatte ja noch die anderen Aufgaben. Als dann die Auftragslage im Projektbereich wieder anzog, wurde mir klar, dass der Fokus nun wieder dorthin verlagert werden w\xfcrde.  Ich w\xfcrde so noch weniger Zeit f\xfcr das haben, was mir lieb geworden war. Somit entschloss ich mich, mich auch einen neuen Weg zu begeben und mich von nun an als Software Tester zu verdingen."}]}')}}]);